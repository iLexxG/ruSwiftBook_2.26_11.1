//
//  DataManager.swift
//  CurrencyRates
//
//  Created by Alex Golyshkov on 08.04.2022.
//

enum Currency: String, CaseIterable{
    case aud = "AUD"
    case azn = "AZN"
    case gbp = "GBP"
    case amd = "AMD"
    case byn = "BYN"
    case bgn = "BGN"
    case brl = "BRL"
    case huf = "HUF"
    case hkd = "HKD"
    case dkk = "DKK"
    case usd = "USD"
    case eur = "EUR"
    case inr = "INR"
    case kzt = "KZT"
    case cad = "CAD"
    case kgs = "KGS"
    case cny = "CNY"
    case mdl = "MDL"
    case nok = "NOK"
    case pln = "PLN"
    case ron = "RON"
    case xdr = "XDR"
    case sgd = "SGD"
    case tjs = "TJS"
    case `try` = "TRY"
    case tmt = "TMT"
    case uzs = "UZS"
    case uah = "UAH"
    case czk = "CZK"
    case sek = "SEK"
    case chf = "CHF"
    case zar = "ZAR"
    case krw = "KRW"
    case jpy = "JPY"
    
   func description() -> String {
        switch self {
        case .aud:
            return "–ê–≤—Å—Ç—Ä–∞–ª–∏–π—Å–∫–∏–π –¥–æ–ª–ª–∞—Ä (A$)"
        case .azn:
            return "–ê–∑–µ—Ä–±–∞–π–¥–∂–∞–Ω—Å–∫–∏–π –º–∞–Ω–∞—Ç (‚Çº)"
        case .gbp:
            return "–§—É–Ω—Ç —Å—Ç–µ—Ä–ª–∏–Ω–≥–æ–≤ (¬£)"
        case .amd:
            return "–ê—Ä–º—è–Ω—Å–∫–∏—Ö –¥—Ä–∞–º–æ–≤ (÷è)"
        case .byn:
            return "–ë–µ–ª–æ—Ä—É—Å—Å–∫–∏–π —Ä—É–±–ª—å (Br)"
        case .bgn:
            return "–ë–æ–ª–≥–∞—Ä—Å–∫–∏–π –ª–µ–≤ (–ª–≤.)"
        case .brl:
            return "–ë—Ä–∞–∑–∏–ª—å—Å–∫–∏–π —Ä–µ–∞–ª (R$)"
        case .huf:
            return "–í–µ–Ω–≥–µ—Ä—Å–∫–∏—Ö —Ñ–æ—Ä–∏–Ω—Ç–æ–≤ (Ft)"
        case .hkd:
            return "–ì–æ–Ω–∫–æ–Ω–≥—Å–∫–∏—Ö –¥–æ–ª–ª–∞—Ä–æ–≤ (HK$)"
        case .dkk:
            return "–î–∞—Ç—Å–∫–∞—è –∫—Ä–æ–Ω–∞ (kr)"
        case .usd:
            return "–î–æ–ª–ª–∞—Ä –°–®–ê (US$)"
        case .eur:
            return "–ï–≤—Ä–æ (‚Ç¨)"
        case .inr:
            return "–ò–Ω–¥–∏–π—Å–∫–∏—Ö —Ä—É–ø–∏–π (‚Çπ)"
        case .kzt:
            return "–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω—Å–∫–∏—Ö —Ç–µ–Ω–≥–µ (‚Ç∏)"
        case .cad:
            return "–ö–∞–Ω–∞–¥—Å–∫–∏–π –¥–æ–ª–ª–∞—Ä (CA$)"
        case .kgs:
            return "–ö–∏—Ä–≥–∏–∑—Å–∫–∏—Ö —Å–æ–º–æ–≤ (—Å–æ–º)"
        case .cny:
            return "–ö–∏—Ç–∞–π—Å–∫–∏–π —é–∞–Ω—å (¬•)"
        case .mdl:
            return "–ú–æ–ª–¥–∞–≤—Å–∫–∏—Ö –ª–µ–µ–≤ (L)"
        case .nok:
            return "–ù–æ—Ä–≤–µ–∂—Å–∫–∏—Ö –∫—Ä–æ–Ω (kr.)"
        case .pln:
            return "–ü–æ–ª—å—Å–∫–∏–π –∑–ª–æ—Ç—ã–π (z≈Ç)"
        case .ron:
            return "–†—É–º—ã–Ω—Å–∫–∏–π –ª–µ–π (L.)"
        case .xdr:
            return "C–ø–µ—Ü. –ø—Ä–∞–≤–∞ –∑–∞–∏–º—Å—Ç–≤–æ–≤–∞–Ω–∏—è (SDR)"
        case .sgd:
            return "–°–∏–Ω–≥–∞–ø—É—Ä—Å–∫–∏–π –¥–æ–ª–ª–∞—Ä (S$)"
        case .tjs:
            return "–¢–∞–¥–∂–∏–∫—Å–∫–∏—Ö —Å–æ–º–æ–Ω–∏ (C.)"
        case .try:
            return "–¢—É—Ä–µ—Ü–∫–∏—Ö –ª–∏—Ä (‚Ç∫)"
        case .tmt:
            return "–¢—É—Ä–∫–º–µ–Ω—Å–∫–∏–π –º–∞–Ω–∞—Ç (‚Çº.)"
        case .uzs:
            return "–£–∑–±–µ–∫—Å–∫–∏—Ö —Å—É–º–æ–≤ (UZS)"
        case .uah:
            return "–£–∫—Ä–∞–∏–Ω—Å–∫–∏—Ö –≥—Ä–∏–≤–µ–Ω (‚Ç¥)"
        case .czk:
            return "–ß–µ—à—Å–∫–∏—Ö –∫—Ä–æ–Ω (Kƒç)"
        case .sek:
            return "–®–≤–µ–¥—Å–∫–∏—Ö –∫—Ä–æ–Ω (Skr)"
        case .chf:
            return "–®–≤–µ–π—Ü–∞—Ä—Å–∫–∏–π —Ñ—Ä–∞–Ω–∫ (SFr)"
        case .zar:
            return "–Æ–∂–Ω–æ–∞—Ñ—Ä–∏–∫–∞–Ω—Å–∫–∏—Ö —Ä—ç–Ω–¥–æ–≤ (R)"
        case .krw:
            return "–í–æ–Ω –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ö–æ—Ä–µ—è (‚Ç©)"
        case .jpy:
            return "–Ø–ø–æ–Ω—Å–∫–∏—Ö –∏–µ–Ω (JP¬•)"
        }
    }
}

enum Change: String {
    case up = "‚¨ÜÔ∏è"
    case down = "üîª"
}
